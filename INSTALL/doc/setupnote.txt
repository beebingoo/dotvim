*setupnote.txt*                                        How-To setup vim and plugin
================================================================================

CONTENTS                                                             |SNCONTENT|

How-To compile vim on CentOS 6.6                                     |SNcompile|
Vim Airline                                                          |SNairline|
Vim Airline through SSH with putty                             |SNairline_putty|
Highlight unwanted spaces                                          |SN_HLspaces|
How-to install libclang                                            |SN_libclang|
vim helptags                                                        |SNhelptags|
The requested URL returned error: 403 Forbidden                 |SN403Forbidden|
Generate .clang_complete                                      |SNclang_complete|
scrooloose/syntastic with libxml2                                  |SNsyntastic|
scrooloose/syntastic with nodejs,jshint                         |SNsyntastic_js|
solarized Gnome Terminal + Tmux + Vim                        |SNcolor_solarized|
================================================================================
--------------------------------------------------------------------------------
How-To compile vim on CentOS 6.6                                     *SNcompile*
--------------------------------

PYTHON (vim7.4 needs python > 2.7.0)
------
$ wget https://www.python.org/ftp/python/2.7.5/Python-2.7.5.tar.bz2
$ cd Python-2.7.5
$ ./configure
$ make all
# make install
# mv /usr/bin/python /usr/bin/python2.6.6
# ln -s /usr/local/bin/python2.7.5 /usr/bin/python

TRUBLESHOOT
-----------
[xfile@localhost vim74]$ yum list
There was a problem importing one of the Python modules
required to run yum. The error leading to this problem was:

   No module named yum

Please install a package which provides this module, or
verify that the module is installed correctly.

It's possible that the above module doesn't match the
current version of Python, which is:
2.7.5 (default, Apr 12 2015, 20:54:21)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-11)]

If you cannot solve this problem yourself, please go to
the yum faq at:
  http://yum.baseurl.org/wiki/Faq


# vi /usr/bin/yum
#!/usr/bin/python2.6.6

+clickboard +xterm_clickboard
-----------------------------
1. Install dependencies
# yum -y install libXt-devel
# yum -y install libX11-devel
$ sudo apt-get install libx11-dev libxt-dev libncurses5-dev
2. Install vim Append --with-x to ./configure
3. Check config.h with HAVE_X11
$ grep X11 src/auto/config.h
#define HAVE_X11 1
#define HAVE_X11_SUNKEYSYM_H 1
4. Check clipboard support after installation
$ vim --version | grep clipboard
$ vim
:echo has('clipboard')
1
5. Set .vimrc
$ vim ~/.vimrc
set clipboard=unnamedplus
6. Install X Server on windows
Download X Server Xming
http://sourceforge.net/projects/xming/files/latest/download
7. Check Enable X11 forwarding in putty
Connection --> SSH --> X11
[*] Enable X11 forwarding
X display location: localhost:0.0
8. Check vim reg
:reg
"*   The windows clipboard content
"+   The windows clipboard content


INSTALL
-------
$ wget ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2
# yum remove vim
# yum install ncurses-devel
$ tar xjf vim-7.4.tar.bz2
$ cd vim74
$ ./configure --with-features=huge --prefix=/usr --enable-multibyte --enable-pythoninterp=yes --with-python-config-dir=/usr/local/lib/python2.7/config/ --with-x
$ make
# make install

UNINSTALL
---------
Run the all same step as for installation, by replace install to uninstall
# make uninstallConfigure Powerline Fonts using fontconfig
------------------------------------------

1. Download the latest version of PowerlineSymbols OpenType font.
$ wget https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf
2. Move the downloaded font to one of your X font directories; ~/.fonts/,
   ~/.local/share/fonts/ or /usr/local/share/fonts/. (~/.fonts/ is deprecated
   and will not be read in the future versions)
$ mv PowerlineSymbols.otf ~/.local/share/fonts/
3. Update the system’s font cache.
$ sudo fc-cache -f -v
4. Download and move the corresponding fontconfig file to ~/.fonts.conf/ or
   $XDG_CONFIG_HOME/fontconfig/fonts.conf/. If $XDG_CONFIG_HOME is not set, the
   path defaults to $HOME/.config where the user-specific files are typically
   located. The path would vary depending on your fontconfig version. For more
   information: $ man fonts-conf
---------------------------------------
$ wget https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
# Create a per-user fontconfig folder if it doesn't already exist
$ mkdir -p ~/.config/fontconfig/fonts.conf
$ mv 10-powerline-symbols.conf ~/.config/fontconfig/fonts.conf/
---------------------------------------
5. Restart your terminal and run fire up vim to see the power and beauty of your
   newly installed Powerline.

--------------------------------------------------------------------------------
Vim Airline                                                          *SNairline*

Lokaltog/vim-powerline, is a legacy vim plugin developed by Lokaltog.
Note: This Plugin is currently in maintenance mode, no feature requests will be
      accepted. Vim-powerline will be deprecated in favour of
      https://github.com/Lokaltog/powerline once it is ready.

Vim Airline: Alternative to Vim Powerline;
A Statusline for Vim that’s light as air

1. Add 'Plugin 'bling/vim-airline' in your vimrc.
2. Open vim and execute :source % and then :PluginInstall
3. For normal user, config Powerline fonts in above section is already enough
   to rock.
   For the nice looking symbols to appear, download and install one of the
   prepatched fonts from powerline-fonts repository. To do so run the following
   commands in your terminal.
---------------------------------------
# Download and install 'Sauce Code Powerline', a prepatched font designed for
# Powerline and Airline users which is derived from Adobe's Source Code Pro
$ git clone https://github.com/powerline/fonts
$ cd fonts
$ ./install.sh
or install prepatched font manually
$ mv Sauce\ Code\ Powerline\ Regular.otf ~/.local/share/fonts/
$ sudo fc-cache -v
after install, check if that particular font is installed.
$ fc-list | grep "Powerline"
---------------------------------------
4. Next you need to add this to your .vimrc to enable automatic population of
   the g:airline_symbols:
let g:airline_powerline_fonts=1
5. Update your terminal profile or Gvim to use the pre-patched font. Restart
   the terminal and vim, and you’re golden!
--------------------------------------------------------------------------------
Vim Airline through SSH with putty                             *SNairline_putty*

1. Download fonts from https://github.com/powerline/fonts, or copy the
   DejaVuSansMono font under fonts/DejaVuSansMono folder.
2. Install patched font on windows
   Run %windir%/Fonts
File->Install new font
3. Putty setting
Window->Appearance->Font
--------------------------------------------------------------------------------
Highlight unwanted spaces                                          *SN_HLspaces*

For occasional use, you can simply search using a suitable pattern to highlight
what you want. The following examples assume you use search highlighting (:set
hlsearch).

" Show all tabs:
/\t

" Show trailing whitespace:
/\s\+$

" Show trailing whitespace only after some text (ignores blank lines):
/\S\zs\s\+$

" Show spaces before a tab:
/ \+\ze\t
--------------------------------------------------------------------------------
How-to install libclang                                            *SN_libclang*

wget http://llvm.org/releases/3.3/llvm-3.3.src.tar.gz
wget http://llvm.org/releases/3.3/cfe-3.3.src.tar.gz
wget http://llvm.org/releases/3.3/clang-tools-extra-3.3.src.tar.gz
wget http://llvm.org/releases/3.3/compiler-rt-3.3.src.tar.gz

llvm-3.3.src/tools/clang          <-- cfe-3.3.src
                  /clang/extra    <-- clang-tools-extra-3.3.src
            /projects/compiler-rt <-- compiler-rt-3.3.src

$ make
# make install
--------------------------------------------------------------------------------
vim helptags                                                        *SNhelptags*

INSTALL
 `-- doc
      |-- setupnote.txt
      `-- tags

:helptags INSTALL/doc

-- setupnote.txt Start ----------------
*setupnote.txt*            usefull setup notes

layer1                   |layer1|

content of layer1        *layer1*
vim:tw=78:ts=8:ft=help:norl:noet:fen:
-- setupnote.txt End ------------------
--------------------------------------------------------------------------------
The requested URL returned error: 403 Forbidden                 *SN403Forbidden*

$ git push origin master
error: The requested URL returned error: 403 Forbidden while accessing https://github.com/beebingoo/dotvim/info/refs

fatal: HTTP request failed

$ git --version
git version 1.7.1
$ git remove set-url https://beebingoo@github.com/beebingoo/dotvim.git
OR
$ git clone https://username:password@github.com/org/project.git
OR
Install git > 1.7.10
--------------------------------------------------------------------------------
Generate .clang_complete                                      *SNclang_complete*

$ make CC='~/.vim/bundle/clang_complete/bin/cc_args.py arm-linux-gcc'
$ make CROSS_COMPILE="~/.vim/bundle/clang_complete/bin/cc_args.py arm-linux-"
--------------------------------------------------------------------------------
scrooloose/syntastic with libxml2                                  *SNsyntastic*

add below to .vimrc
let g:syntastic_c_include_dirs = ['/usr/local/include/libxml2']
or put below into .syntastic_c_config
-I/usr/local/include/libxml2

REFRENCE
--------
https://github.com/scrooloose/syntastic/wiki/Syntax-Checkers
--------------------------------------------------------------------------------
scrooloose/syntastic with nodejs,jshint                         *SNsyntastic_js*

Install Nodejs

Ubuntu
$ sudo add-apt-repository ppa:chris-lea/node.js
$ sudo apt-get update
$ sudo apt-get install nodejs

CentOS
$ git clone git://github.com/joyent/node.git
$ cd node
$ ./configure
$ make
$ sudo make install

$ wget http://nodejs.org/dist/v0.8.21/node-v0.8.21.tar.gz
$ tar -xvzf node-v0.8.21.tar.gz
$ cd node-v0.8.21
$ ./configure
$ make
$ sudo make install
$ which node

Install jshint
$ sudo apt-get install g++ curl libssl-dev apache2-utils git-core
$ curl -L https://npmjs.org/install.sh | sudo sh
$ sudo npm install -g jshint


solarized Gnome Terminal + Tmux + Vim

*SNcolor_solarized*


# store all solarized files in one place
$ mkdir ~/.solarized
$ cd ~/.solarized

# http://www.webupd8.org/2011/04/solarized-must-have-color-paletter-for.html

$ git clone https://github.com/seebi/dircolors-solarized.git
$ eval `dircolors ~/.solarized/dircolors-solarized/dircolors.256dark`
$ ln -s ~/.solarized/dircolors-solarized/dircolors.256dark ~/.dir_colors

$ git clone https://github.com/sigurdga/gnome-terminal-colors-solarized.git
$ ./gnome-terminal-colors-solarized/install.sh

$ git clone https://github.com/seebi/tmux-colors-solarized.git
$ echo "
set -g default-terminal \"screen-256color-bce\"
source ~/.solarized/tmux-colors-solarized/tmuxcolors.conf" >> ~/.tmux.conf


# http://twoism.posterous.com/vim-janus-and-solarized-on-ubuntu-done-right
# git clone https://github.com/altercation/vim-colors-solarized.git

$ echo "
set term=screen-256color-bce
let g:solarized_termcolors=256
set t_Co=256
set background=dark
Colorscheme default " >> ~/.vimrc.after
===============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
